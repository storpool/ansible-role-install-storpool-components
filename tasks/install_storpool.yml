---
- name: Checking if a valid installation method is set
  ansible.builtin.assert:
    that:
      - sp_install_method in supported_installation_methods
    fail_msg: "Unsupported installation method: {{ sp_install_method }}"

- name: Generating a list of StorPool services to be installed
  ansible.builtin.set_fact:
    service_list: "{{ group_names | select('contains', 'storpool_') }}"

- name: Checking if the host has any service designated to be installed
  ansible.builtin.assert:
    that:
      - service_list | length > 0
    fail_msg: "No StorPool service is configured to be installed. Add the host to the corresponding storpool_<service_name> group."

- name: Downloading StorPool packages
  import_tasks: "install_modules_{{ sp_install_method }}.yml"

- name: Setting list of modules to be installed
  ansible.builtin.set_fact:
    install_modules_list: "@cli bindings-py cgtool common beacon kmod update {{ service_list | map('split', 'storpool_') | map('last') | join(' ') }}"
    extra_block_module: "{{ (groups['storpool_block'] is defined and inventory_hostname in groups['storpool_block']) | ternary(' block', '') }}"

- name: Installing StorPool modules
  become: true
  command:
    cmd: >-
      {{ sp_install_helper_path }}
      -g {{ sp_release | quote }}
      {% if sp_reinstall %}
      -r
      {% endif %}
      -w {{ sp_tools_directory | quote }}
      -m {{ (install_modules_list + extra_block_module) | quote }}
      {% if sp_retry_install %}
      --retry 2
      {% endif %}
    chdir: "{{ sp_tools_directory }}"
  async: 1000
  poll: 0
  register: storpool_modules_sleeper
  changed_when: false

- name: Install StorPool modules - check on async task
  become: true
  async_status:
    jid: "{{ storpool_modules_sleeper.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 100
  delay: 5
  changed_when: false
